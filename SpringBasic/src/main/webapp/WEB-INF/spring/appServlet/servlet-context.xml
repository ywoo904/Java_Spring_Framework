<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

<!-- 컴포넌트 스캔을 통해 만들어진 bean uri를 매핑한다(HandleMapping,Adapter) -->	
<!-- 해당 태그가 없다면 Controller 매핑을 할 수가 없음 -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

<!--웹상에서 접근 시 사용할 정보들(CSS,JS,IMG,...etc)
	를 저장하는 공간설정: ${webappRoot}/resources  -->
	<resources mapping="/resources/**" location="/resources/" />

<!--리졸버뷰(뷰 해석기로 전달받은 값을 가지고 prefix+전달값+suffix로 view 자원지정) -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
<!--요청이 들어올 경우에 base-package에 기술된 package를 스캔한다 -->
<!--해당 패키지에 있는 클래스 중 @component 어노테이션의 클래스를 컨테이너에 생성-->
<!--마찬가지로 해당 태그가 없다면 controller태그, mapping태그를 확인할 수 없음 -->	
<!--@Component,@Repository,@Service,@Controller가 붙은 생성 -->
	<context:component-scan base-package="com.zerock.controller" />
	<context:component-scan base-package="com.zerock.service" />
	<context:component-scan base-package="com.zerock.dao" />
	<!--  <beans:bean id="scoreDAO" class="com.zerock.dao.ScoreDAOImpl" />-->
	
	
	
</beans:beans>
